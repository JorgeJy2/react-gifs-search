{"version":3,"sources":["components/AddCategory.js","components/helpers/GetGifs.js","components/GiftGridItem.js","components/GiftGrid.js","components/hooks/UseFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","console","log","categories","placeholder","type","value","onChange","target","getGifs","search","a","url","encodeURI","fetch","response","json","data","gifs","map","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","category","loading","state","setstate","useEffect","then","useFetchGifs","img","key","GifExpertApp","i","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAsB5C,OACI,0BAAMC,SAbW,SAACC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BC,QAAQC,IAAIL,GAEZL,GAAc,SAAAW,GAAU,OAAMT,GAAN,mBAAoBS,OAC5CR,EAAc,OAQb,2BACIS,YAAY,SACZC,KAAK,OACLC,MAAOZ,EACPa,SAzBc,SAAC,GAAsB,IAAZD,EAAW,EAApBE,OAASF,MACjCL,QAAQC,IAAII,GACXX,EAAcW,Q,uBCVVG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,8DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAKTA,EAASC,OALA,uBAIfC,EAJe,EAIfA,KAGEC,EAAOD,EAAKE,KAAI,YAKlB,MAAO,CACHC,GAFF,EAHFA,GAMIC,MAHF,EAFFA,MAMIT,IAJF,EADFU,OAKgBC,iBAAiBX,QAflB,kBAmBZM,GAnBY,4CAAH,sDCGPM,EAAe,SAAC,GAAuB,IAArBJ,EAAoB,EAApBA,GAAIR,EAAgB,EAAhBA,IAAIS,EAAY,EAAZA,MAEnC,OADApB,QAAQC,IAAIkB,GAER,yBAAKK,UAAU,8CACZ,yBAAKC,IAAKd,EAAKe,IAAKN,IACpB,2BAAIA,KCHA,SAASO,EAAT,GAA+B,IAAZC,EAAW,EAAXA,SAAW,ECFjB,SAACA,GAAa,IAAD,EACXpC,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAerC,OATCC,qBAAU,WACNxB,EAAQoB,GACHK,MAAK,SAAAjB,GAAI,OAAIe,EACX,CACIf,OACAa,SAAS,SAErB,CAACD,IAEEE,EDXwBI,CAAaN,GAA/BP,EAF4B,EAElCL,KAAaa,EAFqB,EAErBA,QAEpB,OACI,oCACA,uBAAGL,UAAU,YAAYI,GACxBC,GAAW,0CACZ,yBAAKL,UAAU,aAAf,OAEYH,QAFZ,IAEYA,OAFZ,EAEYA,EAAQH,KAAI,SAACiB,GAAD,OACR,kBAAC,EAAD,eACIC,IAAKD,EAAIhB,IACLgB,SEbhC,IAiBeE,EAjBM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,OAAQ,eAF/B,mBAEhBU,EAFgB,KAEJX,EAFI,KAIvB,OAAQ,oCACR,wBAAI4B,GAAG,SAAP,eAEA,kBAAC,EAAD,CAAa5B,cAAeA,IAE5B,4BAEQW,EAAWgB,KAAI,SAACU,EAAUU,GAAX,OAAiB,kBAACX,EAAD,CAAWS,IAAKR,EAAWU,EAAIV,SAAUA,U,MCVpFW,IAASC,OACR,kBAAC,EAAD,MACCC,SAASC,eAAe,U","file":"static/js/main.27762bcb.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setinputValue] = useState('');\n    \n    const handleInputChange = ({target: {value}})=> {\n        console.log(value);\n         setinputValue(value)\n    };\n\n\n    const handleSubmit = (e)=> {\n       e.preventDefault();\n       \n       if(inputValue.trim().length > 2){\n           console.log(e);\n\n           setCategories(categories =>  [inputValue,...categories]);\n           setinputValue('');\n       }\n    };\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {/* <p> Add Category</p> */}\n            <input \n                placeholder=\"Search\"\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n","export const getGifs = async (search) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(search)}&limit=5&api_key=GWNk3X9haJt175PEAQqLdgLCsTT4gsZ4`;\n    const response = await fetch(url);\n    const {\n        data\n    } = await response.json();\n\n    const gifs = data.map(({\n        id,\n        title,\n        images\n    }) => {\n        return {\n            id,\n            title,\n            url: images.downsized_medium.url\n        };\n    });\n\n    return gifs;\n};","\nimport React from 'react'\n\nexport const GiftGridItem = ( {id, url,title} ) => {\n    console.log(id );\n    return (\n        <div className=\"card animate__animated animate__fadeInDown\">\n           <img src={url} alt={title}/>\n           <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { useFetchGifs } from './hooks/UseFetchGifs';\nimport { GiftGridItem } from './GiftGridItem';\n\nexport default function GiftGrid({category}) {\n\n    const {data: images,loading} = useFetchGifs(category);   \n    \n    return (\n        <>\n        <p className=\"category\">{category}</p>\n        {loading && <p>Loading....</p>}\n        <div className=\"card-grid\">\n                {\n                    images?.map((img) => (\n                        <GiftGridItem \n                            key={img.id}\n                            {...img}\n                            />\n                    ))\n                }\n        </div>\n        </>\n    )\n}\n\nGiftGrid.propTypes = {\n    category: PropTypes.string.isRequired\n};\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/GetGifs';\n\nexport const useFetchGifs = (category) =>{\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n     useEffect(()=>  {\n         getGifs(category)\n             .then(data => setstate(\n                {\n                    data,\n                    loading: false\n                }));\n     }, [category]);\n\n    return state;\n} \n","\nimport React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport GiftGrid from './components/GiftGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['cats', 'programing']);\n\n    return (<> \n    <h1 id=\"title\">Gifs search</h1>\n\n    <AddCategory setCategories={setCategories}/>\n    {/* <hr/> */}\n    <ol>\n        {\n            categories.map((category, i) => <GiftGrid  key={category + i } category={category}/>)\n        }\n    </ol>\n     </>);\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n ReactDOM.render(\n  <GifExpertApp/>,\n   document.getElementById('root')\n );\n"],"sourceRoot":""}